plugins {
    id 'java-library'
    id "idea"
    id "com.adarshr.test-logger" version "3.2.0"
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'ru.vyarus.java-lib' version '2.1.0'
    id 'ru.vyarus.github-info' version '1.3.0'
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id "com.github.ben-manes.versions" version "0.42.0"
    id 'net.researchgate.release' version '3.0.0'
}

def isBuildSnapshot = version.toString().endsWith("-SNAPSHOT")

repositories {
    mavenCentral()
    if (isBuildSnapshot) {
        maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
    }
}

sourceCompatibility = 11
group "io.kestra.plugin"
description 'Plugin template for Kestra'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add("-parameters")
}

dependencies {
    // lombok
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    compileOnly "org.projectlombok:lombok:$lombokVersion"

    // micronaut
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    compileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly "io.micronaut:micronaut-inject"
    compileOnly "io.micronaut:micronaut-validation"

    // kestra
    compileOnly group: "io.kestra", name: "core", version: kestraVersion

    // libs included in the final jar
    api group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
}


/**********************************************************************************************************************\
 * Test
 **********************************************************************************************************************/
test {
    useJUnitPlatform()
}

testlogger {
    theme "mocha-parallel"
    showExceptions true
    showFullStackTraces true
    showStandardStreams true
    showPassedStandardStreams false
    showSkippedStandardStreams true
}

dependencies {
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-junit5"

    // test deps needed only for to have a runner
    testImplementation group: "io.kestra", name: "core", version: kestraVersion
    testImplementation group: "io.kestra", name: "repository-memory", version: kestraVersion
    testImplementation group: "io.kestra", name: "runner-memory", version: kestraVersion
    testImplementation group: "io.kestra", name: "storage-local", version: kestraVersion

    // test
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.hamcrest:hamcrest:2.2"
    testImplementation "org.hamcrest:hamcrest-library:2.2"
}

/**********************************************************************************************************************\
 * Publish
 **********************************************************************************************************************/
nexusPublishing {
    repositoryDescription = "${project.group}:${rootProject.name}:${project.version}"
    useStaging = !isBuildSnapshot
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

jar {
    manifest {
        attributes(
                "X-Kestra-Title": project.name,
                "X-Kestra-Group": project.group + ".templates",
                "X-Kestra-Description": project.description,
                "X-Kestra-Version": project.version
        )
    }
}

pom {
    developers {
        developer {
            id "tchiotludo"
            name "Ludovic Dehon"
        }
    }
}

signing {
    sign publishing.publications.maven
}

shadowJar {
    archiveClassifier.set(null)
    mergeServiceFiles()
}

github {
    user 'kestra-io'
    license 'Apache'
}

/**********************************************************************************************************************\
 * Version
 **********************************************************************************************************************/
release {
    preCommitText = 'chore(version):'
    preTagCommitMessage = 'update to version'
    tagCommitMessage = 'tag version'
    newVersionCommitMessage = 'update snapshot version'
    tagTemplate = 'v${version}'
    buildTasks = ['classes']
}

/**********************************************************************************************************************\
 * Dev
 **********************************************************************************************************************/
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
